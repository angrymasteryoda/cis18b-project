/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package towerdefenseproject;

import com.michael.api.Encoder;

import javax.swing.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import static towerdefenseproject.MysqlCon.*;

/**
 *
 * @author Michael
 */
public class LoginWindow extends javax.swing.JFrame {

    /**
     * Creates new form LoginWindow with login data
     */
    public LoginWindow( String user, String pass ) {
		//todo should we pass the password?
        initComponents();
		emailField.setText( user );
		passField.setText( pass );
    }

	/**
	 * Creates new form LoginWindow
	 */
	public LoginWindow() {
		this( "", "" );
	}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        emailField = new javax.swing.JTextField();
        emailLabel = new javax.swing.JLabel();
        passLabel = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        signupButton = new javax.swing.JButton();
        logo = new javax.swing.JLabel();
        passField = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");

        emailLabel.setText("Email");

        passLabel.setText("Password");
        passLabel.setToolTipText("");

        loginButton.setText("Login");
        loginButton.setActionCommand("login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        signupButton.setText("Sign Up");
        signupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signupButtonActionPerformed(evt);
            }
        });

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/login-logo.jpg"))); // NOI18N

        passField.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(logo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(signupButton)
                        .addGap(18, 18, 18)
                        .addComponent(loginButton))
                    .addComponent(passLabel)
                    .addComponent(emailLabel)
                    .addComponent(emailField)
                    .addComponent(passField))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(emailLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(passLabel)
                .addGap(18, 18, 18)
                .addComponent(passField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginButton)
                    .addComponent(signupButton))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void signupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signupButtonActionPerformed
        this.dispose();
        new SignupWindow().setVisible( true );
    }//GEN-LAST:event_signupButtonActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
		dbOpen();
		if (conStatus=true){
			String email = emailField.getText();
			char[] tmp = passField.getPassword();
			String password = "";
			for(int x=0;x<tmp.length;x++){
				password += tmp[x];
			}
			PreparedStatement state = query("SELECT id FROM users WHERE email = ? AND password = ?");
			try {
				state.setString(1,email);
				state.setString(2,Encoder.getMd5(password));
				ResultSet result = state.executeQuery();
				if (result.next()!=false){
					// todo save this userId, seralize?
					String userId = result.getString("id");
					dbClose();
					this.dispose();
					MainFrame.getInstance().setVisible( true );
				} else {
					JOptionPane.showMessageDialog(null,"The credentials you provided were incorrect, please try again.","Error Logging In",2);
				}
			} catch (SQLException ex) {
				Logger.getLogger(LoginWindow.class.getName()).log(Level.SEVERE, null, ex);
			}
		} else {
			JOptionPane.showMessageDialog(null,"There is no database connection, you will not be able to play this game until this is fixed.","Fatal Error",0);
		}
		dbClose();
    }//GEN-LAST:event_loginButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField emailField;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel logo;
    private javax.swing.JPasswordField passField;
    private javax.swing.JLabel passLabel;
    private javax.swing.JButton signupButton;
    // End of variables declaration//GEN-END:variables
}
